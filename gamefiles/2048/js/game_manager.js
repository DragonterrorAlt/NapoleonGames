function GameManager(e,t,i,a){this.size=e,this.inputManager=new t,this.storageManager=new a,this.actuator=new i,this.startTiles=2,this.inputManager.on("move",this.move.bind(this)),this.inputManager.on("restart",this.restart.bind(this)),this.inputManager.on("keepPlaying",this.keepPlaying.bind(this)),this.setup()}GameManager.prototype.restart=function(){this.storageManager.clearGameState(),this.actuator.continueGame(),this.setup()},GameManager.prototype.keepPlaying=function(){this.keepPlaying=!0,this.actuator.continueGame()},GameManager.prototype.isGameTerminated=function(){return this.over||this.won&&!this.keepPlaying},GameManager.prototype.setup=function(){var e=this.storageManager.getGameState();e?(this.grid=new Grid(e.grid.size,e.grid.cells),this.score=e.score,this.over=e.over,this.won=e.won,this.keepPlaying=e.keepPlaying):(this.grid=new Grid(this.size),this.score=0,this.over=!1,this.won=!1,this.keepPlaying=!1,this.addStartTiles()),this.actuate()},GameManager.prototype.addStartTiles=function(){for(var e=0;e<this.startTiles;e++)this.addRandomTile()},GameManager.prototype.addRandomTile=function(){var e,t;this.grid.cellsAvailable()&&(e=Math.random()<.9?2:4,t=new Tile(this.grid.randomAvailableCell(),e),this.grid.insertTile(t))},GameManager.prototype.actuate=function(){this.storageManager.getBestScore()<this.score&&this.storageManager.setBestScore(this.score),this.over?this.storageManager.clearGameState():this.storageManager.setGameState(this.serialize()),this.actuator.actuate(this.grid,{score:this.score,over:this.over,won:this.won,bestScore:this.storageManager.getBestScore(),terminated:this.isGameTerminated()})},GameManager.prototype.serialize=function(){return{grid:this.grid.serialize(),score:this.score,over:this.over,won:this.won,keepPlaying:this.keepPlaying}},GameManager.prototype.prepareTiles=function(){this.grid.eachCell(function(e,t,i){i&&(i.mergedFrom=null,i.savePosition())})},GameManager.prototype.moveTile=function(e,t){this.grid.cells[e.x][e.y]=null,(this.grid.cells[t.x][t.y]=e).updatePosition(t)},GameManager.prototype.move=function(e){var s,n,o,t,h,l=this;this.isGameTerminated()||(o=this.getVector(e),t=this.buildTraversals(o),h=!1,this.prepareTiles(),t.x.forEach(function(r){t.y.forEach(function(e){var t,i,a;s={x:r,y:e},(n=l.grid.cellContent(s))&&(t=l.findFarthestPosition(s,o),(i=l.grid.cellContent(t.next))&&i.value===n.value&&!i.mergedFrom?((a=new Tile(t.next,2*n.value)).mergedFrom=[n,i],l.grid.insertTile(a),l.grid.removeTile(n),n.updatePosition(t.next),l.score+=a.value,2048===a.value&&(l.won=!0)):l.moveTile(n,t.farthest),l.positionsEqual(s,n)||(h=!0))})}),h&&(this.addRandomTile(),this.movesAvailable()||(this.over=!0),this.actuate()))},GameManager.prototype.getVector=function(e){return{0:{x:0,y:-1},1:{x:1,y:0},2:{x:0,y:1},3:{x:-1,y:0}}[e]},GameManager.prototype.buildTraversals=function(e){for(var t={x:[],y:[]},i=0;i<this.size;i++)t.x.push(i),t.y.push(i);return 1===e.x&&(t.x=t.x.reverse()),1===e.y&&(t.y=t.y.reverse()),t},GameManager.prototype.findFarthestPosition=function(e,t){for(var i;e={x:(i=e).x+t.x,y:i.y+t.y},this.grid.withinBounds(e)&&this.grid.cellAvailable(e););return{farthest:i,next:e}},GameManager.prototype.movesAvailable=function(){return this.grid.cellsAvailable()||this.tileMatchesAvailable()},GameManager.prototype.tileMatchesAvailable=function(){for(var e,t=0;t<this.size;t++)for(var i=0;i<this.size;i++)if(e=this.grid.cellContent({x:t,y:i}))for(var a=0;a<4;a++){var r=this.getVector(a),s={x:t+r.x,y:i+r.y},n=this.grid.cellContent(s);if(n&&n.value===e.value)return!0}return!1},GameManager.prototype.positionsEqual=function(e,t){return e.x===t.x&&e.y===t.y};